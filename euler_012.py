# coding: utf8
# The sequence of triangle numbers is generated by adding the natural numbers. 
# So the 7^(th) triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
# 
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# 
# Let us list the factors of the first seven triangle numbers:
# 
#      1: 1
#      3: 1,3
#      6: 1,2,3,6
#     10: 1,2,5,10
#     15: 1,3,5,15
#     21: 1,3,7,21
#     28: 1,2,4,7,14,28
# 
# We can see that 28 is the first triangle number to have over five divisors.
# 
# What is the value of the first triangle number to have over five hundred divisors?
from utils import get_divisors
  
not_found = True
i = 0
known_divisors = {1: [1]}
while not_found:
  i += 1
  triangle_nb = sum([j for j in range(i+1)])
  known_divisors = get_divisors(triangle_nb, known_divisors)
  if len(known_divisors[triangle_nb]) > 500:
    not_found = False
print triangle_nb